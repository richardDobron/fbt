(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{56:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return c}));var a=n(1),r=n(6),i=(n(0),n(87)),o={id:"params",title:"Parameters and interpolation",sidebar_label:"Parameters (interpolation)"},l={unversionedId:"params",id:"params",isDocsHomePage:!1,title:"Parameters and interpolation",description:"\u26a0\ufe0f NOTEparam and fbt:name will not be escaped!",source:"@site/..\\docs\\params.md",slug:"/params",permalink:"/fbt/docs/params",version:"current",lastUpdatedBy:"Richard Dobro\u0148",lastUpdatedAt:1693241492,sidebar_label:"Parameters (interpolation)",sidebar:"docs",previous:{title:"The FBT API",permalink:"/fbt/docs/api_intro"},next:{title:"Implicit parameters",permalink:"/fbt/docs/implicit_params"}},b=[{value:"Required attributes",id:"required-attributes",children:[]},{value:"Optional attributes",id:"optional-attributes",children:[]},{value:"fbt::name",id:"fbtname",children:[{value:"Duplicate tokens",id:"duplicate-tokens",children:[]}]}],p={rightToc:b};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"\u26a0\ufe0f NOTE: Content of ",Object(i.b)("inlineCode",{parentName:"strong"},"fbt:param")," and ",Object(i.b)("inlineCode",{parentName:"strong"},"fbt:name")," will not be escaped!")),Object(i.b)("p",null,"Interpolation of dynamic text and other markup is accomplished in the FBT framework via ",Object(i.b)("inlineCode",{parentName:"p"},"<fbt:param>")," or ",Object(i.b)("inlineCode",{parentName:"p"},"fbt::param"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<fbt desc="param example">\n  Hello,\n  <fbt:param name="name">{{ $person->getName() }}</fbt:param>.\n</fbt>\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-php"}),"fbt('Hello, ' . fbt::param('name', $person->getName()), 'param example')\n")),Object(i.b)("p",null,"These both ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/fbt/docs/collection"}),"extract")," to the same following text:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'"Hello, {name}"\n')),Object(i.b)("p",null,"Tokens are delimited with the braces above and translations are expected to keep the same total token ",Object(i.b)("em",{parentName:"p"},"count")," and same token ",Object(i.b)("em",{parentName:"p"},"names")," for any given ",Object(i.b)("inlineCode",{parentName:"p"},"fbt")," callsite."),Object(i.b)("h3",{id:"required-attributes"},"Required attributes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"name")," ",Object(i.b)("inlineCode",{parentName:"li"},"string"),": Name of the token")),Object(i.b)("h3",{id:"optional-attributes"},"Optional attributes"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"gender")," ",Object(i.b)("inlineCode",{parentName:"li"},"IntlVariations::GENDER_*"),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Pass the gender of the parameter for correctly variated text."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"number")," ",Object(i.b)("inlineCode",{parentName:"li"},"number|true"),":",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Passing a value of type ",Object(i.b)("inlineCode",{parentName:"li"},"number")," into the ",Object(i.b)("inlineCode",{parentName:"li"},"number")," option uses that\nvalue as the input for which we determine the ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://cldr.unicode.org/index/cldr-spec/plural-rules"}),"CLDR plural value"),"."),Object(i.b)("li",{parentName:"ul"},"You can pass ",Object(i.b)("inlineCode",{parentName:"li"},"true")," to simply use the parameter value (the same value that replaces the token).")))),Object(i.b)("hr",null),Object(i.b)("h2",{id:"fbtname"},"fbt::name"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"<fbt:name>")," is just a special form of ",Object(i.b)("inlineCode",{parentName:"p"},"fbt:param")," that ",Object(i.b)("inlineCode",{parentName:"p"},"requires")," that you pass in the gender for the interpolated variable."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),'<fbt desc="param example">\n  Hello,\n  <fbt:name name="name" gender="{{$person->getGender()}}">{{$person->getName()}}</fbt:name>.\n</fbt>\n')),Object(i.b)("p",null,"Here, gender must be one of the 3 supported gender values in ",Object(i.b)("inlineCode",{parentName:"p"},"IntlVariations"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"IntlVariations::GENDER_MALE:    1;\nIntlVariations::GENDER_FEMALE:  2;\nIntlVariations::GENDER_UNKNOWN: 3;\n")),Object(i.b)("hr",null),Object(i.b)("h3",{id:"duplicate-tokens"},"Duplicate tokens"),Object(i.b)("p",null,"Tokens with the same name, but different values are prohibited in FBT.\nIf you want the same interpolation to show up, you must use\n",Object(i.b)("inlineCode",{parentName:"p"},"fbt:same-param")," or ",Object(i.b)("inlineCode",{parentName:"p"},"fbt::sameParam"),".  This construct only takes a name\nand no value, as the value to the first instance is re-used for the\nsecond token."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"<fbt desc=\"param example\">\n  <fbt:name name=\"name\" gender=\"{{$gender}}\">\n    <a href=\"#\">{{$name}}</a>\n  </fbt:name>\n  shared a link.  Tell\n  <fbt:same-param name=\"name\" />\n  you liked it.\n</fbt>\n\nfbt(\n  fbt::name(\n    'name',\n     '<a href=\"#\">{{$name}}</a>',\n     $gender\n   ) .\n  ' shared a link.  Tell ' . fbt::sameParam('name') . ' you liked it.',\n  'param example'\n)\n")))}c.isMDXComponent=!0},87:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),c=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=c(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,d=m["".concat(o,".").concat(u)]||m[u]||s[u]||i;return n?r.a.createElement(d,l(l({ref:t},p),{},{components:n})):r.a.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);