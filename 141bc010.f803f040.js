(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{57:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return o})),n.d(e,"metadata",(function(){return l})),n.d(e,"rightToc",(function(){return s})),n.d(e,"default",(function(){return c}));var a=n(1),r=n(6),i=(n(0),n(87)),o={id:"translating",title:"Translating",sidebar_label:"Translating FBTs"},l={unversionedId:"translating",id:"translating",isDocsHomePage:!1,title:"Translating",description:"There are two ways to translate phrases:",source:"@site/..\\docs\\translating.md",slug:"/translating",permalink:"/fbt/docs/translating",version:"current",lastUpdatedBy:"Richard Dobro\u0148",lastUpdatedAt:1670779354,sidebar_label:"Translating FBTs",sidebar:"docs",previous:{title:"Extracting FBTs",permalink:"/fbt/docs/collection"},next:{title:"i18n standards",permalink:"/fbt/docs/standards"}},s=[{value:"Command to generate missing translation hashes from collected source strings:",id:"command-to-generate-missing-translation-hashes-from-collected-source-strings",children:[{value:"Options:",id:"options",children:[]}]},{value:"Command to convert provided translations to jenkins:",id:"command-to-convert-provided-translations-to-jenkins",children:[{value:"Options:",id:"options-1",children:[]}]},{value:"JSON schema:",id:"json-schema",children:[]},{value:"Variation types",id:"variation-types",children:[]}],b={rightToc:s};function c(t){var e=t.components,n=Object(r.a)(t,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"There are two ways to translate phrases:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Manually translate generated JSON file."),Object(i.b)("li",{parentName:"ol"},"Use the app editor ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/swiftyper-sk/fbt-sync"}),"Swiftyper Translations"),".")),Object(i.b)("h2",{id:"command-to-generate-missing-translation-hashes-from-collected-source-strings"},"Command to generate missing translation hashes from collected source strings:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"php ./vendor/bin/fbt generate-translations --src=./path/to/fbt/.source_strings.json --translation-input=./path/to/translation_input.json\n# or\nphp ./vendor/bin/fbt generate-translations --src=./path/to/fbt/.source_strings.json --translations=./path/to/translations/*.json\n")),Object(i.b)("h3",{id:"options"},"Options:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"default"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"--src"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"./.source_strings.json"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to collected source strings file")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"--translation-input"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"./translation_input.json"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to translation input file")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"--translations=",Object(i.b)("inlineCode",{parentName:"td"},"[path]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("em",{parentName:"td"},"none")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The translation files containing translations.",Object(i.b)("br",null),"E.g. ",Object(i.b)("inlineCode",{parentName:"td"},"--translations=./path/to/translations/*.json"))))),Object(i.b)("h2",{id:"command-to-convert-provided-translations-to-jenkins"},"Command to convert provided translations to jenkins:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"php ./vendor/bin/fbt translate --path=./path/to/fbt/ --stdin < translation_input.json\n# or\nphp ./vendor/bin/fbt translate --path=./path/to/fbt/ --translations=./path/to/translations/*.json\n")),Object(i.b)("h3",{id:"options-1"},"Options:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"name"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"default"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"--path"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("em",{parentName:"td"},"none")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Path to export translation output (Cache storage path - must be same as in configuration)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"--pretty"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"no"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Pretty print the translation output")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"--translations=",Object(i.b)("inlineCode",{parentName:"td"},"[path]")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("em",{parentName:"td"},"none")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The translation files containing translations.",Object(i.b)("br",null),"E.g. ",Object(i.b)("inlineCode",{parentName:"td"},"--translations=/path/to/translations/*.json"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"--stdin < translation_input.json"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(i.b)("em",{parentName:"td"},"none")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Instead of reading translation files and source file separately, read monolithic JSON file from STDIN")))),Object(i.b)("h2",{id:"json-schema"},"JSON schema:"),Object(i.b)("p",null,"In addition to the below example, the ",Object(i.b)("inlineCode",{parentName:"p"},"translation_input.json"),"\nprovided in our ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/richardDobron/fbt/blob/main/tests/translations/stdin-data/translation_input.json"}),"tests"),'\nis a good reference on the "schema" used for the translations.'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "phrases": [\n    "hashToText": {\n      <text_hash>: <text>,\n      ...\n    },\n    "jsfbt": string|{t:<table>, m:<metadata>}\n  ],\n  ...\n  "translationGroups": [{\n    "fb-locale": "xx_XX",\n    "translations": {\n      <translation_hash>: {\n        "tokens": [<token1>, ..., <tokenN>],\n        "types": [<variationType1>, ..., <variationTypeN>]\n        "translations": [{\n            "translation": <translation1>,\n            "variations": [variationValue1,...,variationValueN]\n          },\n          ...,\n        ]\n      }\n    }\n  }]\n}\n')),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"<text_hash>")," and ",Object(i.b)("inlineCode",{parentName:"p"},"<translation_hash>")," correspond in the above example.\nThat is ",Object(i.b)("inlineCode",{parentName:"p"},"translations[<hash>]")," is the translation entry for\n",Object(i.b)("inlineCode",{parentName:"p"},"phrases.hashToText[<hash>]"),"."),Object(i.b)("p",null,"Here ",Object(i.b)("inlineCode",{parentName:"p"},"tokens"),", ",Object(i.b)("inlineCode",{parentName:"p"},"types")," and ",Object(i.b)("inlineCode",{parentName:"p"},"variations")," are all associative arrays.  That is, in\nthe above example, ",Object(i.b)("inlineCode",{parentName:"p"},"types[i]")," represents the variation type (or mask) of\n",Object(i.b)("inlineCode",{parentName:"p"},"tokens[i]")," and ",Object(i.b)("inlineCode",{parentName:"p"},"variations[i]")," is the variation value of ",Object(i.b)("inlineCode",{parentName:"p"},"token[i]")," for the\ngiven translation entry."),Object(i.b)("h2",{id:"variation-types"},"Variation types"),Object(i.b)("p",null,"Variation types can be one of"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"IntlVariations::BITMASK_NUMBER: 28\nIntlVariations::BITMASK_GENDER:  3\n")),Object(i.b)("p",null,"This signifies what the given token can variate on.  Token types of type ",Object(i.b)("inlineCode",{parentName:"p"},"GENDER")," can be:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"IntlVariations::GENDER_MALE:    1\nIntlVariations::GENDER_FEMALE:  2\nIntlVariations::GENDER_UNKNOWN: 3\n")),Object(i.b)("p",null,"while token types of ",Object(i.b)("inlineCode",{parentName:"p"},"NUMBER")," can be:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"\nIntlVariations::NUMBER_ONE:    4\nIntlVariations::NUMBER_TWO:    8\nIntlVariations::NUMBER_MANY:  12\nIntlVariations::NUMBER_ZERO:  16\nIntlVariations::NUMBER_FEW:   20\nIntlVariations::NUMBER_OTHER: 24\n")))}c.isMDXComponent=!0},87:function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return j}));var a=n(0),r=n.n(a);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var b=r.a.createContext({}),c=function(t){var e=r.a.useContext(b),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},p=function(t){var e=c(t.components);return r.a.createElement(b.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},O=r.a.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,o=t.parentName,b=s(t,["components","mdxType","originalType","parentName"]),p=c(n),O=a,j=p["".concat(o,".").concat(O)]||p[O]||d[O]||i;return n?r.a.createElement(j,l(l({ref:e},b),{},{components:n})):r.a.createElement(j,l({ref:e},b))}));function j(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=O;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:a,o[1]=l;for(var b=2;b<i;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);