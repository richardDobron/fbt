#!/usr/bin/php
<?php

if (php_sapi_name() !== 'cli') {
    exit;
}

$root_app = dirname(__DIR__);

if (!is_file($root_app . '/vendor/autoload.php')) {
    $root_app = dirname(__DIR__, 4);
}

require $root_app . '/vendor/autoload.php';

use Minicli\App;

$app = new App([]);

$app->registerCommand('collect-fbts', function (Minicli\Command\CommandCall $app) {
    $generateTranslationsService = new \fbt\Services\CollectFbtsService();
    $generateTranslationsService->collectFromFiles(
        $app->getParam('--path'),
        $app->getParam('--src'),
        $app->getParam('--fbt-common-path')
    );
});

$app->registerCommand('generate-translations', function (Minicli\Command\CommandCall $app) {
    $generateTranslationsService = new \fbt\Services\TranslationsGeneratorService();
    $generateTranslationsService->generateTranslations(
        $app->getParam('--src') ?: ".source_strings.json",
        $app->getParam('--translations'),
        $app->getParam('--translation-input') ?: "translation_input.json"
    );
});

$app->registerCommand('translate', function (Minicli\Command\CommandCall $app) {
    $generateTranslationsService = new \fbt\Services\TranslationsGeneratorService();
    $generateTranslationsService->exportTranslations(
        $app->getParam('--path'),
        $app->getParam('--translations'),
        $app->hasFlag('--stdin') ? file_get_contents("php://stdin") : null,
        $app->hasFlag('--pretty')
    );
});

$app->runCommand($argv);
